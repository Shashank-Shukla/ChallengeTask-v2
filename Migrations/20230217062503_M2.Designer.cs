// <auto-generated />
using ChallengeTask_v2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChallengeTask_v2.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230217062503_M2")]
    partial class M2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ChallengeTask_v2.Tables.Collateral_agreements", b =>
                {
                    b.Property<int>("CollateralAgreementID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CollateralAgreementID"));

                    b.Property<string>("CAName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CollateralAgreementID");

                    b.ToTable("Collateral_Agreements");
                });

            modelBuilder.Entity("ChallengeTask_v2.Tables.Contract_Frequencies", b =>
                {
                    b.Property<int>("ContractFrequenciesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContractFrequenciesID"));

                    b.Property<string>("CFName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Collateral_Agreements_IDCollateralAgreementID")
                        .HasColumnType("int");

                    b.HasKey("ContractFrequenciesID");

                    b.HasIndex("Collateral_Agreements_IDCollateralAgreementID");

                    b.ToTable("Contract_Frequencies");
                });

            modelBuilder.Entity("ChallengeTask_v2.Tables.Interest_frequency", b =>
                {
                    b.Property<int>("InterestFrequencyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InterestFrequencyID"));

                    b.Property<int>("Contract_Frequencies_IDContractFrequenciesID")
                        .HasColumnType("int");

                    b.Property<string>("IFName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InterestFrequencyID");

                    b.HasIndex("Contract_Frequencies_IDContractFrequenciesID");

                    b.ToTable("Interest_Frequency");
                });

            modelBuilder.Entity("ChallengeTask_v2.Tables.Contract_Frequencies", b =>
                {
                    b.HasOne("ChallengeTask_v2.Tables.Collateral_agreements", "Collateral_Agreements_ID")
                        .WithMany("CF_ID")
                        .HasForeignKey("Collateral_Agreements_IDCollateralAgreementID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Collateral_Agreements_ID");
                });

            modelBuilder.Entity("ChallengeTask_v2.Tables.Interest_frequency", b =>
                {
                    b.HasOne("ChallengeTask_v2.Tables.Contract_Frequencies", "Contract_Frequencies_ID")
                        .WithMany("IF_ID")
                        .HasForeignKey("Contract_Frequencies_IDContractFrequenciesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contract_Frequencies_ID");
                });

            modelBuilder.Entity("ChallengeTask_v2.Tables.Collateral_agreements", b =>
                {
                    b.Navigation("CF_ID");
                });

            modelBuilder.Entity("ChallengeTask_v2.Tables.Contract_Frequencies", b =>
                {
                    b.Navigation("IF_ID");
                });
#pragma warning restore 612, 618
        }
    }
}
